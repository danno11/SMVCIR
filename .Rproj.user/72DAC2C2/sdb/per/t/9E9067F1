{
    "contents" : "\nbanksmv<-smvcir(group = \"Y\", data = banknote, test = TRUE)\nplotcoords(banksmv, dimensions = 1:4)\nplotcoords(banksmv, dimensions = 1:2, GL=TRUE)\n\ninstall.packages(\"e1071\")\nbanksmv$muhat_z\n?pima\n?wisc\ndata(wisc)\nlibrary(caret)\nlibrary(SMVCIR)\ntrain<-createDataPartition(wisc$tumor, p = .8, list = F)###Create a training set using 80% of dataset\nwisc.smv<-smvcir(\"tumor\", data = wisc[train,], test = T) ###Build smvcir model on training set\nplotcoords(wisc.smv, dimensions = 1:3)\n\n\nbcpreds<-predict(wisc.smv, newdata = wisc[-train,], type = \"prob\")\nbcpreds<-predict(wisc.smv, newdata = wisc[-train,], type = \"class\")\nbcpreds<-predict(wisc.smv, newdata = wisc[-train,], coordinates_only = TRUE)\nbcpreds$tumor<-wisc$tumor[-train]\n\nplotcoords(wisc.smv, dimensions = 1:6)\nplotcoords(bcpreds, dimensions = 1:6)\n\n\n\nsplom(~bcpreds[1:6], groups = tumor, data = bcpreds,\n      panel = panel.superpose,\n      key = list(title = \"Three Varieties of Iris\",\n                 columns = 2,\n                 points = list(pch = super.sym$pch[4:5],\n                               col = super.sym$col[4:5]),\n                 text = list(c(\"malignant\", \"benign\"))))\n\nparallelplot(~iris[1:4] | Species, iris)\n\n\nlibrary(SMVCIR)\nlibrary(lattice)\nlibrary(latticeExtra)\n\nfoo <- xyplot(ozone ~ wind, environmental)\nfoo\n\n\nsplom(~bcpreds[,1:4],\n      groups = tumor,\n      data=bcpreds,\n      type = c(\"p\", \"g\", \"r\")\n      panel = function(x, y,groups,...) {\n           panel.xyplot(x, y, groups = groups,...)\n              panel.lmline(x,y,groups = groups)\n           })\n\n\n\nwrap<-function(dat, dim, lmline=FALSE,addPoints = NULL, addPointsArgs=list(),...){\n  ifelse(lmline == TRUE, type<-c(\"p\", \"g\", \"smooth\"), type<-c(\"p\", \"g\"))\n  a<-splom(~dat[dim], groups = diabetes, data = dat,\n        type = type,...)\n  if(!is.null(addPoints)){\n         a+layer(panel.points(newdat[,j],newdat[,i], pch=\"x\",col=newdat$tumor, cex = 2))\n  } else{\n    a\n  }\n}\na<-wrap(pred_coords, 1:3, lmline = TRUE, auto.key = TRUE, col = c(\"indianred\", \"steelblue\"), pch = 17)\nwmat<-pred_coords\ndimensions = 1:3\nkernel = \"radial\"\nk<-8\nmod_obj<-svm(as.formula(c(paste(names(wmat)[k+1],\"~\"), paste(names(wmat)[dimensions],\n                                                             collapse = \"+\"))), kernel = kernel,\n             data = wmat)\nslice<-lapply(wmat[,dimensions], median)\nnewdf<-\n d<- apply(wmat[,dimensions], 2, min)\n e<-  apply(wmat[,dimensions], 2, max)\n newdf<-matrix(NA, 50,3)\n for(i in 1:3){\n   newdf[,i]<-seq(d[i], e[i], length.out = 50)\n }\n preds <- predict(mod_obj, newdf)\n newdf<-cbind(newdf, preds)\n\n a+panel.co\n\n #####left off here\nxr<-seq(min(wmat[,dimensions], max(wmat[,dimensions])))\n\n\nxr <- seq(xl[1], xl[2], length = 50)\nyr <- seq(yl[1], yl[2], length = 50)\nformala<-as.formula(paste(names(zmat)[i], \"~\", names(zmat)[j]))\nlis <- c(list(yr), list(xr), slice)\nnames(lis)[1:2] <- colnames(wmat)[c(i,j)]\nnew <- expand.grid(lis)[, labels(terms(mod_obj))]\npreds <- predict(mod_obj, new)\n.filled.contour(xr,\n                yr,\n                matrix(as.numeric(preds),nrow = length(xr), byrow = TRUE),\n                levels = 1:length(levels(preds))+1,\n                col=colorpanel(3, low = \"gray70\", high = \"gray45\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nplotcoords(pred_coords, 1:3)\nwrap(bcpreds, 1:3,  pch = 23, lmline=TRUE, auto.key = list(points = TRUE, pch = 10, columns = 2),\n     addPoints = newdat)\nwrap(bcpreds, 1:3,  pch = 23, lmline=TRUE, auto.key = list(points = TRUE, pch = 10, columns = 2))\nsplom(bcpreds[,1:3], groups = bcpreds$tumor)\n\n\n\nrevm<-smvcir(\"tumor\", data = bcpreds, test = T)\npredict(revm, newdata = wisc.smv$direct[5:20,], type = \"prob\")\n\n\na<-wrap(bcpreds, 1:3,  pch = 23, lmline=TRUE, auto.key = TRUE)\nb<-splom(~wisc.smv$direct[2,][1:3], groups = tumor,\n                 data = wisc.smv$direct[2,], col = c(\"green\", \"red\"), pch = \"x\", cex = 3)\n\n\n\na+layer(panel.points(newdat[,j],newdat[,i],\n                        pch=\"x\",col=newdat$tumor, cex = 3))\n\n\n\n  xyplot(fdeaths ~ mdeaths) +\n  as.layer(xyplot(fdeaths ~ mdeaths, col = 2, subset = ldeaths > 2000))\n\nnewdat<-wisc.smv$direct[5:20, c(1:3, 10)]\n\ncl<-kmeans(iris[1:4], 3)\ncl$centers\nsplom(bcpreds[,1:3], groups = bcpreds$tumor,\n      panel=function(x, y,i,j,groups, ...) {\n        panel.points(x, y, pch=21,col=groups)\n        panel.points(newdat[,j],newdat[,i],\n                     pch=\"x\",col=newdat$tumor, cex = 3)\n      },auto.key=list(levels(bcpreds$groups), points = FALSE, lines = TRUE))\n\ncl<-kmeans(iris[,1:4], 3)\nlibrary(e1071)\nirsvm<-svm(spec2~., data = iris2, kernel = \"radial\", decision.values = T)\n\na<-splom(iris2[1:4],groups=iris2$spec2,pch=21,\n      panel=function(x, y,i,j,groups, ...) {\n        panel.points(x, y, pch=21,col=groups)\n                     }, auto.key = TRUE)\n\niris2<-iris\niris2$spec2<-factor(ifelse(iris$Species==\"setosa\", 1, 0))\niris2<-iris2[,-5]\nirpred<-predict(irsvm, iris2, decision.values = TRUE)\n\nsplom(iris2[1:4], groups = iris2$spec2) + layer(panel.contourplot())\nx<-iris2\nmake.grid = function(x, n = 10) {\n  grange = apply(x, 2, range)\n  x1 = seq(from = grange[1, 1], to = grange[2, 1], length = n)\n  x2 = seq(from = grange[1, 2], to = grange[2, 2], length = n)\n  x3 = seq(from = grange[1, 3], to = grange[2, 3], length = n)\n  x4 = seq(from = grange[1, 4], to = grange[2, 4], length = n)\n\n  expand.grid(Sepal.Length = x1, Sepal.Width = x2, Petal.Length = x3, Petal.Width = x4)\n}\nxgrid = make.grid(iris2[,1:4])\nygrid = predict(irsvm, xgrid)\npairs(iris2[1:4], col = iris2$spec2)\npairs(xgrid, add = TRUE)\nsplom(iris2[1:4], groups = iris2$spec2) + layer(panel.contourplot(x = ))\npoints(xgrid, col = c(\"red\", \"blue\")[as.numeric(ygrid)], pch = 20, cex = 0.2)\npoints(x, col = y + 3, pch = 19)\npoints(x[svmfit$index, ], pch = 5, cex = 2)\ntable(ygrid)\n\na<-splom(iris2[1:4],groups=iris2$spec2,pch=21,\n         panel=function(x, y,i,j,groups, ...) {\n           panel.points(x, y, pch=21,col=groups)\n         }, auto.key = TRUE)\nnewd<-cbind(xgrid, ygrid)\n\na<-splom(iris2[1:4],groups=iris2$spec2,pch=21)\n\na + layer(panel.points(x = newd[,j], y = newd[,i], groups = newd$ygrid))\nlayer_(panel.contourplot(x = gridlon, y = gridlat, z = dist2,\n                         contour = TRUE, subscripts = TRUE), data = newdat)\n\nbwplot(D1~tumor, bcpreds)\ndensityplot(~D1, groups = tumor, data = bcpreds, lwd = 3, main = \"Density Plot\")\nxyplot(D1~D2, groups = tumor, data = bcpreds,\n       panel = function(x,y, groups){\n         panel.lmline(x,y, groups = \"tumor\")\n       })\n\n       panel.po\npoints(1:)\n\na<-splom(~bcpreds[1:6], groups = tumor, data = bcpreds, col = c(\"red\", \"green\"))\na<-a+layer(panel.lmline(x,y, lty = 2, groups = tumor))\n\n## overlay reference lines\nfoo <- foo + layer(panel.abline(h = 0)) +\n  layer(panel.lmline(x, y, lty = 2, groups = tumor))\nbwplot(yield ~ site, barley, groups = year,\n       panel = function(x, y, groups, subscripts, ...) {\n         panel.grid(h = -1, v = -1)\n         panel.stripplot(x, y, ..., jitter.data = TRUE,\n                         groups = groups, subscripts = subscripts)\n         panel.superpose(x, y, ..., panel.groups = panel.average,\n                         groups = groups, subscripts = subscripts)\n       },\n       auto.key =\n         list(points = FALSE, lines = TRUE, columns = 2))\n\n\ntable(bcpreds, wisc$tumor[-train])\nhead(bcpreds)  ###probability estimates\ncoef(wisc.smv)\nwisc.smv$coefficients\n\n###Get Coordinates\ncoords<-predict(wisc.smv, newdata = wisc, coordinates_only = TRUE)\ncoords$tumor<-wisc$tumor\n",
    "created" : 1463496383653.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1148226685",
    "id" : "9E9067F1",
    "lastKnownWriteTime" : 1463949455,
    "path" : "C:/Users/Dan/Desktop/smvcir/new2dplotfunc.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled9"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}