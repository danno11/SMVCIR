{
    "contents" : "#####MODIFIED plotit2d @39\n###change datmat to wmat\nx<-wisc.smv\ndimensions<-1:3\ngroups<-1:10\n\n\n\n\n\n\n\nlibrary(caret)\ntrain<-createDataPartition(pima$diabetes, p = .8, list = FALSE)\npim.smv<-smvcir(\"diabetes\", data = pima[train,], test = T) ###Build smvcir model on training set\npred_coords<-predict(pim.smv, newdata = pima[-train,], coordinates_only = TRUE)\npred_coords$diabetes<-pima$diabetes[-train]\n\nplotcoords(pred_coords, dimensions = 1:8)\nplotcoords(pred_coords, dimensions = 1:3, GL = TRUE, build_svm = TRUE)\nplotcoords(pred_coords, dimensions = 1:3, build_svm = TRUE, kernel = \"linear\")\nwrap(pred_coords, 1:3, lmline = TRUE)\n\n\npreds<-predict(pim.smv, newdata = pima[-train,], type = \"class\")\npredprob<-predict(pim.smv, newdata = pima[-train,], type = \"prob\")\nlogpredprob<-predict(pim.smv, newdata = pima[-train,], type = \"prob\", method = )\nlibrary(pROC)\nsmvRoc<-roc(response = pima$class[-train],\n    predictor = predprob[,1])\nplot(smvRoc)\nconfusionMatrix(preds, pima$class[-train])  ###Check accuracy\n\nplotcoords(pim.smv, dimension = c(1:3), GL = TRUE) ###3D PLOT\nplotcoords(pim.smv, dimensions = c(1:3), groups = 1:10, GL = TRUE, build_svm = TRUE)\nplotcoords(pred_coords, dimensions = c(1:3), groups = 1:2, GL = TRUE, build_svm = TRUE)\n\nplotcoords(wisc.smv, GL = TRUE, dimensions = 1:3, build_svm = TRUE)\nplotcoords(w_coords, dimensions = 1:3, build_svm = TRUE, GL = TRUE)\n\nwisc.smv<-smvcir(data = wisc, group = \"class\", test = FALSE)\nplotcoords(wisc.smv, dimensions = 1:3, GL = TRUE, build_svm = TRUE)\nw_coords<-predict(wisc.smv, newdata = wisc, coordinates_only = TRUE)\nw_coords$class<-wisc$class\n\nplotcoords(pim.smv, dimensions  = 1:4)\nplotcoords(pred_coords, dimensions = 1:4)\n\nplotcoords(pim.smv, dimensions = 5)\nplotcoords(w_coords, dimensions = 1:3, build_svm = TRUE, GL = TRUE)\nplotcoords(glasscoords, dimensions = 3)\nlevel_vec<-NA\nfor(i in 1:10){\n  level_vec[i]<-levels(graphdat$group)[i]\n}\nlevis<-as.numeric(!is.na(level_vec))\ncolor_vec<-c(24, 552, 26, 498, 547, 32, 254, 536, 652, 8)\nsum(levis*color_vec)\n\n\nlibrary(misc3d)\nlibrary(e1071)\n\npred_coords<-predict(pim.smv, newdata = pima, coordinates_only = TRUE)#####Get the coordinates from the model\npred_coords$class<-pima$class\nclass(pred_coords)<-\"smvcir\"\n\n## volcano  ## 87 x 61 matrix\nwireframe(volcano, shade = TRUE,\n          aspect = c(61/87, 0.4),\n          light.source = c(10,0,10))\n\n\n\nx<-wisc.smv\ndimensions<-1:3\nGL = TRUE\nbuild_svm = TRUE\n\n\n\n\n\n\nlibrary(ggplot2)\nplotmatrix(pred_coords[,1:6])\n\nplotSVM3d<-function(x, y, kernel = \"radial\", svm_fit = NULL,...){\n  dat\n  plot3d(x, col = as.numeric(y)+1)\n  svm_mod<-svm(x = x, y = y, kernel =paste(kernel), type = \"C-classification\", ...)\n  n=100\n  nnew = 50\n  newdat.list = lapply(x, function(x) seq(min(x), max(x), len=nnew))\n  newdat      = expand.grid(newdat.list)\n  newdat.pred = predict(svm_mod, newdata=newdat, decision.values=T)\n  newdat.dv   = attr(newdat.pred, 'decision.values')\n  newdat.dv   = array(newdat.dv, dim=rep(nnew, 3))\n  # Fit/plot an isosurface to the decision boundary\n  contour3d(newdat.dv, level=0, x=newdat.list[[1]], y=newdat.list[[2]], z=newdat.list[[3]], add=T)\n  #legend3d(\"topright\", legend = paste(levels(y)), pch = 16, col = as.numeric(levels(y))+1)\n  return(list(svm_mod = svm_mod))\n}\nlibrary(rgl)\nlibrary(misc3d)\nlibrary(e1071)\nplotSVM3d(x = bcpreds[,1:3], bcpreds[,10]) ###Visualize an support vector machine model with our coordinates\nplotSVM3d(x = pred_coords[,1:3], pred_coords[,9], kernel = \"linear\") ###Visualize an support vector machine model with our coordinates\nplotSVM3d(x = pred_coords[,1:3], pred_coords[,9], kernel = \"polynomial\") ###Visualize an support vector machine model with our coordinates\n\n\ndata(wisc)\nlibrary(caret)\ntrain<-createDataPartition(wisc$class, p = .8, list = F)###Create a training set using 80% of dataset\nwisc.smv<-smvcir(\"class\", data = wisc[train,], test = T) ###Build smvcir model on training set\nbcpreds<-predict(wisc.smv, newdata = wisc[-train,], coordinates_only = TRUE)\nbcpreds$class<-wisc$class[-train]\nplotcoords(bcpreds, dimensions = 1:3, GL = TRUE, build_svm = TRUE)\nplotcoords(bcpreds, dimensions = 1:4)\nhead(bcpreds)  ###probability estimates\n\ngg<-grapherfunc(wisc.smv, wisc[-train,])\n\n\n\n\n\ngraphdat$zecolor <- colors()[(graphdat$group == 1) * 24 +\n                               (graphdat$group == 2) * 552 + (graphdat$group == 3) *\n                               26 + (graphdat$group == 4) * 498 + (graphdat$group == 5) * 547 + (graphdat$group == 6) * 32 +\n                               (graphdat$group == 7) * 254 + (graphdat$group == 8) * 536 + (graphdat$group == 9) * 652 +\n                               (graphdat$group == 10) * 8]\n\ngraphdat <- wmat[, c(dimension, ncol(wmat))]\nzecolor <- rep(0, nrow(wmat))\ngraphdat <- data.frame(graphdat, zecolor)\nnames(graphdat)[1] <- \"sortit\"\ngraphdat <- graphdat[order(graphdat$sortit), ]\nnames(graphdat)[1] <- paste(\"D\", dimension, sep = \"\")\nnames(graphdat)[2] <- names(wmat)[ncol(wmat)]\n#zecolor <- rep(0, nrow(graphdat))\n#graphdat <- data.frame(graphdat, zecolor)\nnames(graphdat)[2] <- \"group\"\n\nfor(i in 1:10){\n  level_vec[i]<-levels(graphdat$group)[i]\n}\ngraphdat$level_var<-graphdat$group==level_vec\n\nlevis<-as.numeric(!is.na(level_vec))\ncolor_vec<-c(24, 552, 26, 498, 547, 32, 254, 536, 652, 8)\n\nlle<-for(i in 1:length(levels(graphdat$group))){\n  levels(graphdat$group)[i]==as.numeric(graphdat$group)*i\n}\n\n\ngraphdat$zecolor <- colors()[sum(levis*color_vec)]\n\n\nnewdat.dv   = array(newdat.dv, dim=rep(nnew, 2))\nplot(svm_mod, datmat, datmat[,1]~datmat[,2], dataSymbol = 2, symbolPalette = rainbow(4),\n     color.palette = terrain.colors)\ndata(cats, package = \"MASS\")\nm <- svm(Sex~., data = cats)\nplot(m, cats)\n\ndata(iris)\nm2 <- svm(Species~., data = iris)\nplot(m2, iris, Petal.Width ~ Petal.Length,\n     slice = list(Sepal.Width = 3, Sepal.Length = 4))\nsv<-svm(class~., data = datmat, kernel = \"polynomial\")\nplot(sv, datmat, D3~D4)\n\nlibrary(rgl)\nlibrary(SMVCIR)\nplotcoords(pima, dimensions = 1:3)\n\nglassmod<-smvcir(group = \"Type\", data = glass)\nplotcoords(glassmod, dimensions = 1:3, GL = TRUE)\n\n?plotClassProbs\nplotClassProbs\n\n",
    "created" : 1458246242341.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4061287996",
    "id" : "B00D4DA1",
    "lastKnownWriteTime" : 1463860018,
    "path" : "C:/Users/Dan/Desktop/smvcir/plotting_examples.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}