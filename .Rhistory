pred_coords<-predict(mod, newdata = wisc, coordinates_only = TRUE)
pred_coords$class<-wisc$tumor
logistic_mod<-glm(tumor~.,data = pred_coords[datsamp,], family = "binomial")
glm_preds<-predict(logistic_mod, newdata = pred_coords[-datsamp,], type = "response")
classp<-ifelse(glm_preds > .5, "malignant", "benign")
tab2<-table(classp, pred_coords[-datsamp,]$type)
roc2<-roc(pred_coords[-datsamp,]$type, glm_preds)
auc_mat[i, 2]<-auc(roc2)
acc_mat[i, 2]<-sum(diag(tab2))/sum(tab2)
####svm method
svmMod<-svm(tumor~., data = pred_coords[datsamp,], probability = TRUE)
ppred<-predict(svmMod, newdata = pred_coords[-datsamp,], probability = TRUE)
tab3<-table(ppred, pred_coords[-datsamp,]$tumor)
roc3<-roc(pred_coords[-datsamp,]$tumor, attr(ppred, "probabilities")[,2])
auc_mat[i, 3]<-auc(roc3)
acc_mat[i, 3]<-sum(diag(tab3))/sum(tab3)
#####logistic original coordinates
logistic_mod2<-glm(tumor~.,data = wisc[datsamp,], family = "binomial")
glm_preds2<-predict(logistic_mod2, newdata = wisc[-datsamp,], type = "response")
classp2<-ifelse(glm_preds2 > .5, "malignant", "benign")
tab22<-table(classp2, wisc[-datsamp,]$tumor)
roc22<-roc(wisc[-datsamp,]$tumor, glm_preds2)
auc_mat[i, 4]<-auc(roc22)
acc_mat[i, 4]<-sum(diag(tab22))/sum(tab22)
####
####svm original coordinates
svmMod2<-svm(tumor~., data = wisc[datsamp,], probability = TRUE)
ppred2<-predict(svmMod2, newdata = wisc[-datsamp,], probability = TRUE)
tab32<-table(ppred2, wisc[-datsamp,]$class)
roc32<-roc(wisc[-datsamp,]$class, attr(ppred2, "probabilities")[,2])
auc_mat[i, 5]<-auc(roc32)
acc_mat[i, 5]<-sum(diag(tab32))/sum(tab32)
#####
colnames(auc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
colnames(acc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
}
library(SMVCIR)
set.seed(4316)
acc_mat<-matrix(NA, 10,5)
auc_mat<-matrix(NA, 10,5)
for(i in 1:10){
####centroid smvcir method
datsamp<-sample(1:nrow(wisc), replace = TRUE)
mod<-smvcir(group = "tumor", data = wisc[datsamp,], test = FALSE)
oob_class_preds<-predict(mod, newdata = wisc[-datsamp,], type = "class")
oob_prob_preds<-predict(mod, newdata = wisc[-datsamp,], type = "prob")
tab<-table(oob_class_preds, wisc[-datsamp,]$tumor)
acc_mat[i,1]<-sum(diag(tab))/sum(tab) ###centroid oob overall accuracy
roc1<-roc(wisc[-datsamp,]$tumor, oob_prob_preds[,2])
auc_mat[i,1]<-auc(roc1)
####logistic smvcir method
pred_coords<-predict(mod, newdata = wisc, coordinates_only = TRUE)
pred_coords$class<-wisc$tumor
logistic_mod<-glm(tumor~.,data = pred_coords[datsamp,], family = "binomial")
glm_preds<-predict(logistic_mod, newdata = pred_coords[-datsamp,], type = "response")
classp<-ifelse(glm_preds > .5, "malignant", "benign")
tab2<-table(classp, pred_coords[-datsamp,]$type)
roc2<-roc(pred_coords[-datsamp,]$type, glm_preds)
auc_mat[i, 2]<-auc(roc2)
acc_mat[i, 2]<-sum(diag(tab2))/sum(tab2)
####svm method
svmMod<-svm(tumor~., data = pred_coords[datsamp,], probability = TRUE)
ppred<-predict(svmMod, newdata = pred_coords[-datsamp,], probability = TRUE)
tab3<-table(ppred, pred_coords[-datsamp,]$tumor)
roc3<-roc(pred_coords[-datsamp,]$tumor, attr(ppred, "probabilities")[,2])
auc_mat[i, 3]<-auc(roc3)
acc_mat[i, 3]<-sum(diag(tab3))/sum(tab3)
#####logistic original coordinates
logistic_mod2<-glm(tumor~.,data = wisc[datsamp,], family = "binomial")
glm_preds2<-predict(logistic_mod2, newdata = wisc[-datsamp,], type = "response")
classp2<-ifelse(glm_preds2 > .5, "malignant", "benign")
tab22<-table(classp2, wisc[-datsamp,]$tumor)
roc22<-roc(wisc[-datsamp,]$tumor, glm_preds2)
auc_mat[i, 4]<-auc(roc22)
acc_mat[i, 4]<-sum(diag(tab22))/sum(tab22)
####
####svm original coordinates
svmMod2<-svm(tumor~., data = wisc[datsamp,], probability = TRUE)
ppred2<-predict(svmMod2, newdata = wisc[-datsamp,], probability = TRUE)
tab32<-table(ppred2, wisc[-datsamp,]$class)
roc32<-roc(wisc[-datsamp,]$class, attr(ppred2, "probabilities")[,2])
auc_mat[i, 5]<-auc(roc32)
acc_mat[i, 5]<-sum(diag(tab32))/sum(tab32)
#####
colnames(auc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
colnames(acc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
}
library(SMVCIR)
set.seed(4316)
acc_mat<-matrix(NA, 10,5)
auc_mat<-matrix(NA, 10,5)
for(i in 1:10){
####centroid smvcir method
datsamp<-sample(1:nrow(wisc), replace = TRUE)
mod<-smvcir(group = "tumor", data = wisc[datsamp,], test = FALSE)
oob_class_preds<-predict(mod, newdata = wisc[-datsamp,], type = "class")
oob_prob_preds<-predict(mod, newdata = wisc[-datsamp,], type = "prob")
tab<-table(oob_class_preds, wisc[-datsamp,]$tumor)
acc_mat[i,1]<-sum(diag(tab))/sum(tab) ###centroid oob overall accuracy
roc1<-roc(wisc[-datsamp,]$tumor, oob_prob_preds[,2])
auc_mat[i,1]<-auc(roc1)
####logistic smvcir method
pred_coords<-predict(mod, newdata = wisc, coordinates_only = TRUE)
pred_coords$class<-wisc$tumor
logistic_mod<-glm(tumor~.,data = pred_coords[datsamp,], family = "binomial")
glm_preds<-predict(logistic_mod, newdata = pred_coords[-datsamp,], type = "response")
classp<-ifelse(glm_preds > .5, "malignant", "benign")
tab2<-table(classp, pred_coords[-datsamp,]$type)
roc2<-roc(pred_coords[-datsamp,]$type, glm_preds)
auc_mat[i, 2]<-auc(roc2)
acc_mat[i, 2]<-sum(diag(tab2))/sum(tab2)
####svm method
svmMod<-svm(tumor~., data = pred_coords[datsamp,], probability = TRUE)
ppred<-predict(svmMod, newdata = pred_coords[-datsamp,], probability = TRUE)
tab3<-table(ppred, pred_coords[-datsamp,]$tumor)
roc3<-roc(pred_coords[-datsamp,]$tumor, attr(ppred, "probabilities")[,2])
auc_mat[i, 3]<-auc(roc3)
acc_mat[i, 3]<-sum(diag(tab3))/sum(tab3)
#####logistic original coordinates
logistic_mod2<-glm(tumor~.,data = wisc[datsamp,], family = "binomial")
glm_preds2<-predict(logistic_mod2, newdata = wisc[-datsamp,], type = "response")
classp2<-ifelse(glm_preds2 > .5, "malignant", "benign")
tab22<-table(classp2, wisc[-datsamp,]$tumor)
roc22<-roc(wisc[-datsamp,]$tumor, glm_preds2)
auc_mat[i, 4]<-auc(roc22)
acc_mat[i, 4]<-sum(diag(tab22))/sum(tab22)
####
####svm original coordinates
svmMod2<-svm(tumor~., data = wisc[datsamp,], probability = TRUE)
ppred2<-predict(svmMod2, newdata = wisc[-datsamp,], probability = TRUE)
tab32<-table(ppred2, wisc[-datsamp,]$class)
roc32<-roc(wisc[-datsamp,]$class, attr(ppred2, "probabilities")[,2])
auc_mat[i, 5]<-auc(roc32)
acc_mat[i, 5]<-sum(diag(tab32))/sum(tab32)
#####
colnames(auc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
colnames(acc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
}
set.seed(4316)
acc_mat<-matrix(NA, 10,5)
auc_mat<-matrix(NA, 10,5)
for(i in 1:10){
####centroid smvcir method
datsamp<-sample(1:nrow(wisc), replace = TRUE)
mod<-smvcir(group = "tumor", data = wisc[datsamp,], test = FALSE)
oob_class_preds<-predict(mod, newdata = wisc[-datsamp,], type = "class")
oob_prob_preds<-predict(mod, newdata = wisc[-datsamp,], type = "prob")
tab<-table(oob_class_preds, wisc[-datsamp,]$tumor)
acc_mat[i,1]<-sum(diag(tab))/sum(tab) ###centroid oob overall accuracy
roc1<-roc(wisc[-datsamp,]$tumor, oob_prob_preds[,2])
auc_mat[i,1]<-auc(roc1)
####logistic smvcir method
pred_coords<-predict(mod, newdata = wisc, coordinates_only = TRUE)
pred_coords$tumor<-wisc$tumor
logistic_mod<-glm(tumor~.,data = pred_coords[datsamp,], family = "binomial")
glm_preds<-predict(logistic_mod, newdata = pred_coords[-datsamp,], type = "response")
classp<-ifelse(glm_preds > .5, "malignant", "benign")
tab2<-table(classp, pred_coords[-datsamp,]$type)
roc2<-roc(pred_coords[-datsamp,]$type, glm_preds)
auc_mat[i, 2]<-auc(roc2)
acc_mat[i, 2]<-sum(diag(tab2))/sum(tab2)
####svm method
svmMod<-svm(tumor~., data = pred_coords[datsamp,], probability = TRUE)
ppred<-predict(svmMod, newdata = pred_coords[-datsamp,], probability = TRUE)
tab3<-table(ppred, pred_coords[-datsamp,]$tumor)
roc3<-roc(pred_coords[-datsamp,]$tumor, attr(ppred, "probabilities")[,2])
auc_mat[i, 3]<-auc(roc3)
acc_mat[i, 3]<-sum(diag(tab3))/sum(tab3)
#####logistic original coordinates
logistic_mod2<-glm(tumor~.,data = wisc[datsamp,], family = "binomial")
glm_preds2<-predict(logistic_mod2, newdata = wisc[-datsamp,], type = "response")
classp2<-ifelse(glm_preds2 > .5, "malignant", "benign")
tab22<-table(classp2, wisc[-datsamp,]$tumor)
roc22<-roc(wisc[-datsamp,]$tumor, glm_preds2)
auc_mat[i, 4]<-auc(roc22)
acc_mat[i, 4]<-sum(diag(tab22))/sum(tab22)
####
####svm original coordinates
svmMod2<-svm(tumor~., data = wisc[datsamp,], probability = TRUE)
ppred2<-predict(svmMod2, newdata = wisc[-datsamp,], probability = TRUE)
tab32<-table(ppred2, wisc[-datsamp,]$class)
roc32<-roc(wisc[-datsamp,]$class, attr(ppred2, "probabilities")[,2])
auc_mat[i, 5]<-auc(roc32)
acc_mat[i, 5]<-sum(diag(tab32))/sum(tab32)
#####
colnames(auc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
colnames(acc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
}
set.seed(4316)
acc_mat<-matrix(NA, 10,5)
auc_mat<-matrix(NA, 10,5)
for(i in 1:10){
####centroid smvcir method
datsamp<-sample(1:nrow(wisc), replace = TRUE)
mod<-smvcir(group = "tumor", data = wisc[datsamp,], test = FALSE)
oob_class_preds<-predict(mod, newdata = wisc[-datsamp,], type = "class")
oob_prob_preds<-predict(mod, newdata = wisc[-datsamp,], type = "prob")
tab<-table(oob_class_preds, wisc[-datsamp,]$tumor)
acc_mat[i,1]<-sum(diag(tab))/sum(tab) ###centroid oob overall accuracy
roc1<-roc(wisc[-datsamp,]$tumor, oob_prob_preds[,2])
auc_mat[i,1]<-auc(roc1)
####logistic smvcir method
pred_coords<-predict(mod, newdata = wisc, coordinates_only = TRUE)
pred_coords$tumor<-wisc$tumor
logistic_mod<-glm(tumor~.,data = pred_coords[datsamp,], family = "binomial")
glm_preds<-predict(logistic_mod, newdata = pred_coords[-datsamp,], type = "response")
classp<-ifelse(glm_preds > .5, "malignant", "benign")
tab2<-table(classp, pred_coords[-datsamp,]$tumor)
roc2<-roc(pred_coords[-datsamp,]$type, glm_preds)
auc_mat[i, 2]<-auc(roc2)
acc_mat[i, 2]<-sum(diag(tab2))/sum(tab2)
####svm method
svmMod<-svm(tumor~., data = pred_coords[datsamp,], probability = TRUE)
ppred<-predict(svmMod, newdata = pred_coords[-datsamp,], probability = TRUE)
tab3<-table(ppred, pred_coords[-datsamp,]$tumor)
roc3<-roc(pred_coords[-datsamp,]$tumor, attr(ppred, "probabilities")[,2])
auc_mat[i, 3]<-auc(roc3)
acc_mat[i, 3]<-sum(diag(tab3))/sum(tab3)
#####logistic original coordinates
logistic_mod2<-glm(tumor~.,data = wisc[datsamp,], family = "binomial")
glm_preds2<-predict(logistic_mod2, newdata = wisc[-datsamp,], type = "response")
classp2<-ifelse(glm_preds2 > .5, "malignant", "benign")
tab22<-table(classp2, wisc[-datsamp,]$tumor)
roc22<-roc(wisc[-datsamp,]$tumor, glm_preds2)
auc_mat[i, 4]<-auc(roc22)
acc_mat[i, 4]<-sum(diag(tab22))/sum(tab22)
####
####svm original coordinates
svmMod2<-svm(tumor~., data = wisc[datsamp,], probability = TRUE)
ppred2<-predict(svmMod2, newdata = wisc[-datsamp,], probability = TRUE)
tab32<-table(ppred2, wisc[-datsamp,]$class)
roc32<-roc(wisc[-datsamp,]$class, attr(ppred2, "probabilities")[,2])
auc_mat[i, 5]<-auc(roc32)
acc_mat[i, 5]<-sum(diag(tab32))/sum(tab32)
#####
colnames(auc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
colnames(acc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
}
set.seed(4316)
acc_mat<-matrix(NA, 10,5)
auc_mat<-matrix(NA, 10,5)
for(i in 1:10){
####centroid smvcir method
datsamp<-sample(1:nrow(wisc), replace = TRUE)
mod<-smvcir(group = "tumor", data = wisc[datsamp,], test = FALSE)
oob_class_preds<-predict(mod, newdata = wisc[-datsamp,], type = "class")
oob_prob_preds<-predict(mod, newdata = wisc[-datsamp,], type = "prob")
tab<-table(oob_class_preds, wisc[-datsamp,]$tumor)
acc_mat[i,1]<-sum(diag(tab))/sum(tab) ###centroid oob overall accuracy
roc1<-roc(wisc[-datsamp,]$tumor, oob_prob_preds[,2])
auc_mat[i,1]<-auc(roc1)
####logistic smvcir method
pred_coords<-predict(mod, newdata = wisc, coordinates_only = TRUE)
pred_coords$tumor<-wisc$tumor
logistic_mod<-glm(tumor~.,data = pred_coords[datsamp,], family = "binomial")
glm_preds<-predict(logistic_mod, newdata = pred_coords[-datsamp,], type = "response")
classp<-ifelse(glm_preds > .5, "malignant", "benign")
tab2<-table(classp, pred_coords[-datsamp,]$tumor)
roc2<-roc(pred_coords[-datsamp,]$tumor, glm_preds)
auc_mat[i, 2]<-auc(roc2)
acc_mat[i, 2]<-sum(diag(tab2))/sum(tab2)
####svm method
svmMod<-svm(tumor~., data = pred_coords[datsamp,], probability = TRUE)
ppred<-predict(svmMod, newdata = pred_coords[-datsamp,], probability = TRUE)
tab3<-table(ppred, pred_coords[-datsamp,]$tumor)
roc3<-roc(pred_coords[-datsamp,]$tumor, attr(ppred, "probabilities")[,2])
auc_mat[i, 3]<-auc(roc3)
acc_mat[i, 3]<-sum(diag(tab3))/sum(tab3)
#####logistic original coordinates
logistic_mod2<-glm(tumor~.,data = wisc[datsamp,], family = "binomial")
glm_preds2<-predict(logistic_mod2, newdata = wisc[-datsamp,], type = "response")
classp2<-ifelse(glm_preds2 > .5, "malignant", "benign")
tab22<-table(classp2, wisc[-datsamp,]$tumor)
roc22<-roc(wisc[-datsamp,]$tumor, glm_preds2)
auc_mat[i, 4]<-auc(roc22)
acc_mat[i, 4]<-sum(diag(tab22))/sum(tab22)
####
####svm original coordinates
svmMod2<-svm(tumor~., data = wisc[datsamp,], probability = TRUE)
ppred2<-predict(svmMod2, newdata = wisc[-datsamp,], probability = TRUE)
tab32<-table(ppred2, wisc[-datsamp,]$class)
roc32<-roc(wisc[-datsamp,]$class, attr(ppred2, "probabilities")[,2])
auc_mat[i, 5]<-auc(roc32)
acc_mat[i, 5]<-sum(diag(tab32))/sum(tab32)
#####
colnames(auc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
colnames(acc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
}
set.seed(4316)
acc_mat<-matrix(NA, 10,5)
auc_mat<-matrix(NA, 10,5)
for(i in 1:10){
####centroid smvcir method
datsamp<-sample(1:nrow(wisc), replace = TRUE)
mod<-smvcir(group = "tumor", data = wisc[datsamp,], test = FALSE)
oob_class_preds<-predict(mod, newdata = wisc[-datsamp,], type = "class")
oob_prob_preds<-predict(mod, newdata = wisc[-datsamp,], type = "prob")
tab<-table(oob_class_preds, wisc[-datsamp,]$tumor)
acc_mat[i,1]<-sum(diag(tab))/sum(tab) ###centroid oob overall accuracy
roc1<-roc(wisc[-datsamp,]$tumor, oob_prob_preds[,2])
auc_mat[i,1]<-auc(roc1)
####logistic smvcir method
pred_coords<-predict(mod, newdata = wisc, coordinates_only = TRUE)
pred_coords$tumor<-wisc$tumor
logistic_mod<-glm(tumor~.,data = pred_coords[datsamp,], family = "binomial")
glm_preds<-predict(logistic_mod, newdata = pred_coords[-datsamp,], type = "response")
classp<-ifelse(glm_preds > .5, "malignant", "benign")
tab2<-table(classp, pred_coords[-datsamp,]$tumor)
roc2<-roc(pred_coords[-datsamp,]$tumor, glm_preds)
auc_mat[i, 2]<-auc(roc2)
acc_mat[i, 2]<-sum(diag(tab2))/sum(tab2)
####svm method
svmMod<-svm(tumor~., data = pred_coords[datsamp,], probability = TRUE)
ppred<-predict(svmMod, newdata = pred_coords[-datsamp,], probability = TRUE)
tab3<-table(ppred, pred_coords[-datsamp,]$tumor)
roc3<-roc(pred_coords[-datsamp,]$tumor, attr(ppred, "probabilities")[,2])
auc_mat[i, 3]<-auc(roc3)
acc_mat[i, 3]<-sum(diag(tab3))/sum(tab3)
#####logistic original coordinates
logistic_mod2<-glm(tumor~.,data = wisc[datsamp,], family = "binomial")
glm_preds2<-predict(logistic_mod2, newdata = wisc[-datsamp,], type = "response")
classp2<-ifelse(glm_preds2 > .5, "malignant", "benign")
tab22<-table(classp2, wisc[-datsamp,]$tumor)
roc22<-roc(wisc[-datsamp,]$tumor, glm_preds2)
auc_mat[i, 4]<-auc(roc22)
acc_mat[i, 4]<-sum(diag(tab22))/sum(tab22)
####
####svm original coordinates
svmMod2<-svm(tumor~., data = wisc[datsamp,], probability = TRUE)
ppred2<-predict(svmMod2, newdata = wisc[-datsamp,], probability = TRUE)
tab32<-table(ppred2, wisc[-datsamp,]$tumor)
roc32<-roc(wisc[-datsamp,]$tumor, attr(ppred2, "probabilities")[,2])
auc_mat[i, 5]<-auc(roc32)
acc_mat[i, 5]<-sum(diag(tab32))/sum(tab32)
#####
colnames(auc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
colnames(acc_mat)<-c("centroid", "logistic (smvcir)", "svm (smvcir)", "logistic", "svm")
}
acc_mat
auc_mat
apply(auc_mat,2,mean)
?plotcoords
?wisc
?pima
library(SMVCIR)
library(devtools)
build()
plotcoords(mod, dimensions = 1:3, build_svm = )
plotcoords(mod, dimensions = 1:3, build_svm = TRUE)
library(caret)
?createDataPartition
train<-createDataPartition(pima$diabetes, p = .8, list = FALSE)
pim.smv<-smvcir("class", data = pima[train,], test = T) ###Build smvcir model on training set
pim.smv<-smvcir("diabetes", data = pima[train,], test = T) ###Build smvcir model on training set
pred_coords<-predict(pim.smv, newdata = pima, coordinates_only = TRUE)
pim.smv<-smvcir("diabetes", data = pima[train,], test = T) ###Build smvcir model on training set
pred_coords<-predict(pim.smv, newdata = pima[-train,], coordinates_only = TRUE)
pred_coords$diabetes<-pima$diabetes[-train,]
str(pred_coords)
pred_coords$diabetes<-pima$diabetes[-train]
plotcoords(pred_coords, dimensions = 1:8)
plotcoords(pred_coords, dimensions = 1:3, GL = TRUE, build_svm = TRUE)
plotcoords(pred_coords, dimensions = 1:3, build_svm = TRUE)
library(SMVCIR)
?plotcoords
library(caret)
train<-createDataPartition(pima$diabetes, p = .8, list = FALSE)
pim.smv<-smvcir("diabetes", data = pima[train,], test = T) ###Build smvcir model on training set
pred_coords<-predict(pim.smv, newdata = pima[-train,], coordinates_only = TRUE)
pred_coords$diabetes<-pima$diabetes[-train]
plotcoords(pred_coords, dimensions = 1:8)
build()
?"e1071-deprecated"
library(e1071)
?svm
?predict.smvcir
help("smvcir")
?smvcir
install.packages("npsm")
library(npsm)
data("latour")
str(latour)
plot(latour$year, latour$quality)
unique(latour$year)
?fkk.test
fkk.test(y = latour$end.of.harvest, ind = factor(latour$year))
fkk.test(y = latour$end.of.harvest, ind = factor(latour$quality))
latour$quality<-factor(latour$quality)
str(latour)
plot(latour$year, latour$quality, type = "l")
latour$rain<-factor(latour$rain)
data("latour")
str(latour)
latour$rain<-factor(latour$rain)
smvcir("rain", data = latour[,c(2:4)])
mod<-smvcir("rain", data = latour[,c(2:4)])
plot(mod, build_svm = TRUE)
plotcoords(mod, build_svm = TRUE)
data <- matrix(scan("threesamp.dat",skip=4),byrow=T,ncol=2)
dat <- matrix(scan("threesamp.dat",skip=4),byrow=T,ncol=2)
dat <- matrix(scan("C:/users/dan/desktop/smvcir/threesamp.dat",skip=4),byrow=T,ncol=2)
str(dat)
head(dat)
response<-data[,1];   indicator <- data[,2]
response<-dat[,1];   indicator <- dat[,2]
fkk.test(response,indicator)
datMod<-smvcir("ind", data = dat)
datMod<-smvcir("indicator", data = dat)
names(dat)<-c("response", "indicator")
datMod<-smvcir("indicator", data = dat)
q()
library(SMVCIR)
dims<-smvcir("class", wisc, test = TRUE)
dims<-smvcir("tumor", wisc, test = TRUE)
plotcoords(dims, 1:3, GL = TRUE, kernel = "radial")
library(SMVCIR)
dims<-smvcir("tumor", wisc, test = TRUE)
plotcoords(dims, 1:3, GL = TRUE, kernel = "radial")
library(SMVCIR)
plotcoords(dims, 1:3, GL = TRUE, kernel = "radial")
plotcoords(dims, 1:3,  kernel = "radial")
plotcoords(dims, 1:3, GL = TRUE, kernel = "radial", build_svm = TRUE)
library(SMVCIR)
plotcoords(dims, 1:3, GL = TRUE, kernel = "radial", build_svm = TRUE)
is.null(kernel)
kernel
?wisc
kernel = "radial"
kernel
plotcoords(dims, 1:3, GL = TRUE, kernel = "radial", build_svm = TRUE)
library(SMVCIR)
plotcoords(dims, 1:3, GL = TRUE, kernel = "radial", build_svm = TRUE)
kernel
is.null(kernel)
kernel<-NULL
is.null(kernel)
ifelse(is.null(kernel), kernel = "radial", kernel = kernel)
library(SMVCIR)
plotcoords(dims, 1:3, GL = TRUE, kernel = "radial", build_svm = TRUE)
library(SMVCIR)
plotcoords(dims, 1:3, GL = TRUE, kernel = "radial", build_svm = TRUE)
library(SMVCIR)
plotcoords(dims, 1:3, GL = TRUE, kernel = "radial", build_svm = TRUE)
library(SMVCIR)
plotcoords(dims, 1:3, GL = TRUE, kernel = "radial", build_svm = TRUE)
plotcoords(dims, 1:3, kernel = "radial", build_svm = TRUE)
library(SMVCIR)
plotcoords(dims, 1:3, kernel = "radial", build_svm = TRUE)
?svm
k<-svm(tumor~., data = wisc, kernel = "radial")
k
wmat<-wisc
k = length(wmat[1, ]) - 1
mod_obj<-svm(as.formula(paste(names(wmat)[k+1],"~ ."), kernel = kernel), data = wmat, kernel = "linear")
mod_obj<-svm(as.formula(paste(names(wmat)[k+1],"~ .")), kernel = kernel), data = wmat, kernel = "linear")
mod_obj<-svm(as.formula(paste(names(wmat)[k+1],"~ .")), kernel = kernel, data = wmat, kernel = "linear")
mod_obj<-svm(as.formula(paste(names(wmat)[k+1],"~ .")), kernel = kernel, data = wmat)
kernel
library(SMVCIR)
plotcoords(dims, 1:3, kernel = "radial", build_svm = TRUE)
plotcoords(dims, 1:3, kernel = "polynomial", build_svm = TRUE)
plotcoords(dims, 1:3, kernel = "linear", build_svm = TRUE)
plotcoords(dims, 1:3, kernel = "linear", build_svm = TRUE)
rm(list = ls())
plotcoords(dims, 1:3, kernel = "linear", build_svm = TRUE)
data(wisc)
library(caret)
train<-createDataPartition(wisc$tumor, p = .8, list = F)###Create a training set using 80% of dataset
wisc.smv<-smvcir("tumor", data = wisc[train,], test = T) ###Build smvcir model on training set
bcpreds<-predict(wisc.smv, newdata = wisc[-train,], type = "prob")
head(bcpreds)  ###probability estimates
###Get Coordinates
coords<-predict(wisc.smv, newdata = wisc, coordinates_only = TRUE)
coords$tumor<-wisc$tumor
plotcoords(coords, dimensions = 1:3)
plotcoords(coords, dimensions = 1:3, build_svm = TRUE)
plotcoords(coords, dimensions = 1:3, build_svm = TRUE, kernel = "linear")
ls()
plotcoords(coords, dimensions = 1:3, build_svm = TRUE, kernel = "polynomial", GL = TRUE)
plotcoords(coords, dimensions = 1:3, build_svm = TRUE, kernel = "linear", GL = TRUE)
kernel
ls()
library(SMVCIR)
plotcoords(coords, dimensions = 1:3, build_svm = TRUE, kernel = "polynomial", GL = TRUE)
plotcoords(coords, dimensions = 1:3, build_svm = TRUE, kernel = "linear")
plotcoords(coords, dimensions = 1:3, build_svm = TRUE, kernel = "polynomial", GL = TRUE)
?var.test
x<-wisc[wisc$tumor=="malignant",]
y<-wisc[wisc$tumor=="benign",]
str(x)
str(y)
var.test(x,y)
bartlett.test(tumor~., data = wisc)
bartlett.test(tumor~secs, data = wisc )
bartlett.test(secs~tumor, data = wisc )
install.packages("biotools")
library(biotools)
boxM(wisc[,-10], wisc[,10])
boxM(pima[,-9], pima[,9])
banknote<-read.table("http://www.stat.tamu.edu/~sheather/book/docs/datasets/banknote.txt", header = TRUE, sep = "\t")
head(banknote)
banknote$Y<-factor(banknote$Y)
str(banknote)
boxM(banknote[,-7], banknote[,7])
banksmv<-smvcir("Y", data = banknote, test = TRUE)
plotcoords(banksmv, dimensions = 1:3, GL = TRUE)
plotcoords(banksmv, dimensions = 1:3, GL = TRUE, build_svm = TRUE)
plotcoords(banksmv, dimensions = 1:3, GL = TRUE, build_svm = TRUE, kernel = "radial")
plotcoords(banksmv, dimensions = 1:3, build_svm = TRUE, kernel = "radial")
plotcoords(banksmv, dimensions = 1:3, build_svm = TRUE, kernel = "linear")
load("C:/Users/Dan/Desktop/2160/exam_funcs/exam_dataspace.RData")
rm(list = ls())
